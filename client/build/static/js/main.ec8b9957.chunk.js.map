{"version":3,"sources":["components/Wrapper.js","utils/AUTH.js","components/Signup.js","pages/Login.js","utils/CHATR.js","components/MessageList.js","components/ChatBox.js","components/Navbar.js","pages/Dashboard.js","App.js","hooks/useToken.js","serviceWorker.js","index.js"],"names":["Wrapper","props","react_default","a","createElement","Object","assign","className","AUTH","signUpUser","newUser","axios","post","loginUser","_loginUser","asyncToGenerator","regenerator_default","mark","_callee","user","wrap","_context","prev","next","abrupt","stop","_x","apply","this","arguments","findAllUsers","_findAllUsers","_callee2","_context2","get","getOneUser","_getOneUser","_callee3","_context3","concat","_x2","Signup","_ref","setToken","_useState","useState","_useState2","slicedToArray","firstname","setFirstname","_useState3","_useState4","lastname","setLastname","_useState5","_useState6","username","setUsername","_useState7","_useState8","password","setPassword","handleLogin","_ref2","token","sent","handleSignup","_ref3","e","preventDefault","console","log","firstName","lastName","onSubmit","size","type","placeholder","name","onChange","target","value","Login","handleSubmit","t0","alert","propTypes","PropTypes","func","isRequired","CHATR","newOrOpenChat","chatData","newOrOpenChatInvert","addMessage","addMessageInvert","getMessages","_getMessages","chatDataString","JSON","stringify","MessageList","messageList","messageList2","chatpartner","partneredMessageList","setPartneredMessageList","useEffect","i","length","chatPartner","chats","getMessagesForUser","id","map","message","senderId","text","ChatBox","thisUser","thisUserName","setMessageList2","refresh","messages","undefined","data","interval","setInterval","clearInterval","aria-label","onClick","document","getElementById","style","display","aria-hidden","components_MessageList","event","thisChat","Navbar","users","setUsers","setChatpartner","setMessageList","getUsers","allUsers","_id","localStorage","slice","splice","openForm","_ref4","result","_x3","CustomMenu","React","forwardRef","_ref5","ref","children","labeledBy","setValue","aria-labelledby","FormControl","autoFocus","Children","toArray","filter","child","includes","Dropdown","Toggle","variant","Menu","as","Item","key","clear","window","location","reload","Dashboard","setThisUser","getUser","thisUserID","App","_useToken","userToken2","parse","getItem","getToken","userToken","userTokenID","objectToken","parsedToken","setItem","useToken","react_router_dom","components_Wrapper","react_router","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ec8b9957.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\nexport default Wrapper;\n","/* eslint-disable import/no-anonymous-default-export */\nimport axios from \"axios\";\n\nexport default {\n    signUpUser: function(newUser) {\n        // console.log('USERDATA for signup: ', newUser);\n        return axios.post(\"/auth/signup\", newUser);\n    },\n    loginUser: async function(user) {\n        // console.log('data for login: ', user);\n        return axios.post(\"/auth/login\", user);\n    },\n    findAllUsers: async function() {\n        // console.log('findall');\n        return axios.get(\"/auth/users/\");\n    },\n    getOneUser: async function(user) {\n        // console.log('From AUTH, user: ', user)\n        // axios.get()\n        return axios.get(`/auth/user/${user}`);\n    }\n};","import React, { useState } from \"react\";\nimport AUTH from \"../utils/AUTH\";\nimport Login from \"../pages/Login\";\nimport PropTypes from 'prop-types';\n\nexport default function Signup({ setToken }) {\n  \n  const [firstname, setFirstname] = useState();\n  const [lastname, setLastname] = useState();\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  \n  const handleLogin = async () => {\n      const token = await AUTH.loginUser({\n        username,\n        password\n      })\n      setToken(token);\n  }\n\n  const handleSignup = async e => {\n      e.preventDefault();\n      console.log(\"name is \" + firstname + \" \" + lastname);\n      console.log(\"username is \" + username)\n      console.log(\"password is \" + password);\n\n      await AUTH.signUpUser({\n        firstName: firstname,\n        lastName: lastname,\n        username: username,\n        password: password\n      })\n\n      return handleLogin();\n  };\n\n\n  return (\n    <div className=\"col-sm-6 px-5\">\n      <div className=\"m-4 text-center\">\n        <h3>New Users</h3>\n      <hr></hr>\n      </div>\n      <form onSubmit={handleSignup}>\n        <div className=\"container mt-3 px-5\">\n          <div className=\"row form-group\">\n            <div className=\"col\" size=\"12\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"First Name\"\n                name=\"firstname\"\n                onChange={e => setFirstname(e.target.value)}\n                />\n            </div>\n          </div>\n          <div className=\"row form-group\">\n            <div className=\"col\" size=\"12\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Last Name\"\n                name=\"lastname\"\n                onChange={e => setLastname(e.target.value)}\n                />\n            </div>\n          </div>\n          <div className=\"row form-group\">\n            <div className=\"col\" size=\"12\">\n              <input\n                className=\"form-control\"\n                type=\"username\"\n                placeholder=\"username\"\n                name=\"username\"\n                onChange={e => setUsername(e.target.value)}\n                />\n            </div>\n          </div>\n          <div className=\"row form-group\">\n            <div className=\"col\" size=\"12\">\n              <input\n                className=\"form-control\"\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                onChange={e => setPassword(e.target.value)}\n                />\n            </div>\n          </div>\n          <button className=\"btn btn-success\" type=\"submit\">\n            Sign Up\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};","import React, { useState } from \"react\";\nimport AUTH from \"../utils/AUTH\";\nimport Signup from \"../components/Signup\"\nimport PropTypes from 'prop-types';\n\n\nexport default function Login ({ setToken }) {\n\n    const [username, setUsername] = useState();\n    const [password, setPassword] = useState();\n  \n    const handleSubmit = async e => {\n        e.preventDefault();\n\n        console.log(\"username is \" + username)\n        console.log(\"password is \" + password);\n        try {\n            const token = await AUTH.loginUser({\n                username,\n                password\n            })\n            setToken(token)\n            // console.log(token);\n        }\n        catch(err) {\n            console.log('Login error: ', err)\n            alert ('Incorrect username or password')\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"container\">\n                <h1 className=\"text-center m-4\">Welcome to Tee Time!</h1>\n                <div className=\"row\">\n                    <div className=\"col-sm-6 px-5\">\n                        <div className=\"m-4 text-center\">\n                            <h3>Log In</h3>\n                            <hr></hr>\n                        </div>\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"container mt-3 px-5\">\n                                <div className=\"row form-group\">\n                                    <div className=\"col\" size=\"12\">\n                                    <input\n                                        className=\"form-control\"\n                                        type=\"text\"\n                                        placeholder=\"Username\"\n                                        name=\"username\"\n                                        onChange={e => setUsername(e.target.value)}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"row form-group\">\n                                    <div className=\"col\" size=\"12\">\n                                    <input\n                                        className=\"form-control\"\n                                        type=\"password\"\n                                        placeholder=\"Password\"\n                                        name=\"password\"\n                                        onChange={e => setPassword(e.target.value)}\n                                        />\n                                    </div>\n                                </div>\n                            <button className=\"btn btn-success\" type=\"submit\">\n                                Log In\n                            </button>\n                            </div>\n                        </form>\n                    </div>\n                    <Signup setToken={setToken} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nLogin.propTypes = {\n    setToken: PropTypes.func.isRequired\n};","import axios from \"axios\";\n\nexport default {\n    newOrOpenChat: function(chatData) {\n        // console.log('from CHATR: neworopenchat, CHATDATA: ', chatData);\n        return axios.post(\"/chat/newOrOpenChat\", chatData);\n    },\n    newOrOpenChatInvert: function(chatData) {\n        return axios.post(\"/chat/newOrOpenChatInvert\", chatData);\n    },\n    addMessage: function(chatData) {\n        // console.log('FROM CHATR: CHATDATA: ', chatData);\n        return axios.post(\"/chat/addMessage\", chatData)\n    },\n    addMessageInvert: function(chatData) {\n        return axios.post(\"/chat/addMessageInvert\", chatData)\n    },\n    getMessages: async function(chatData) {\n        // console.log('FROM CHATR TEST123', chatData);\n        // const chatDataString = JSON.stringify(chatData)\n        // console.log('CHATDATASTRING: ', chatDataString)\n        // console.log(axios.get(`/chat/getMessages/${chatDataString}`));\n        // return axios.get(`/chat/getMessages/${chatDataString}`);\n        \n        const chatDataString = JSON.stringify(chatData)\n        // console.log('CDS: ', chatDataString);\n        // console.log('!!!!!!', axios.get(`/chat/getMessages/${chatDataString}`));\n        return axios.get(`/chat/getMessages/${chatDataString}`)\n    }\n}","import React, { useState, useEffect } from \"react\";\n\n\nfunction MessageList( {messageList, messageList2, chatpartner }) {\n\n\n    const [partneredMessageList, setPartneredMessageList] = useState();\n    \n    const getMessagesForUser = () => {\n        if (messageList && !messageList2) {\n            for (let i = 0; i<messageList.length; i++) {\n                if (messageList[i].chatPartner === chatpartner) {\n                    // console.log('MESSAGES FOR THIS PARTNER: ', messageList[i].chats)\n                    setPartneredMessageList(messageList[i].chats)\n                }\n            }\n        }\n        else if (messageList2) {\n            for (let i = 0; i<messageList2.length; i++) {\n                if (messageList2[i].chatPartner === chatpartner) {\n                    setPartneredMessageList(messageList2[i].chats)\n                }\n            }\n        }\n    }\n\n    useEffect(() => {\n        getMessagesForUser()\n    })\n\n    // const messageListBox = document.getElementById(\"messageListBox\");\n    // if (messageListBox) {\n    //     // console.log('HEIGHT: ', messageListBox.scrollHeight)\n    //     messageListBox.scrollTop = messageListBox.scrollHeight;\n    // }\n\n    // if (messageList === undefined && messageList2 === undefined ) {\n    //     // console.log('BOTH are undefined')\n    //     return (\n    //         <div className=\"card\"></div>\n    //     )\n    // } else if (messageList2 === undefined && messageList) {\n    //     // console.log('using messagelist1')\n\n    if (partneredMessageList) {\n\n        return (\n            <div className=\"card mList\">\n            <div className=\"message-list\" id=\"messageListBox\">\n                {partneredMessageList.map(message => (\n                    <div className=\"message\">\n                        <div className=\"senderId\">\n                        {message.senderId}\n                        </div>\n                        <div className=\"messageContent rounded d-inline-flex pr-1 pl-1\">\n                        {message.text}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n} else {\n    return(\n        <div></div>\n    )\n}\n\n    \n    // } else if (messageList2) {\n    //     // console.log('using messagelist2')\n    //     return (\n    //     <div className=\"card mList\">\n    //         <div className=\"message-list\" id=\"messageListBox\">\n    //             {messageList2.map(message => (\n    //                 <div className=\"message\">\n    //                     <div className=\"senderId\">\n    //                     {message.senderId}\n    //                     </div>\n    //                     <div className=\"messageContent rounded d-inline-flex pr-1 pl-1\">\n    //                     {message.text}\n    //                     </div>\n    //                 </div>\n    //             ))}\n    //         </div>\n    //     </div>\n    // )\n    // }\n}\n\nexport default MessageList;","import React, { useState, useEffect } from \"react\";\nimport MessageList from \"./MessageList\";\nimport CHATR from \"../utils/CHATR\";\n\nexport default function ChatBox( {thisUser, chatpartner, messageList } ) {\n\n    const thisUserName = thisUser.username\n\n    const [messageList2, setMessageList2] = useState();\n\n    const refresh = async e => {\n        if (chatpartner !== undefined) {\n            // console.log('refresh clicked!');\n            const messages = await CHATR.getMessages({\n                user: thisUserName\n            })\n            setMessageList2(messages.data)\n        } else {\n            return\n            // console.log('TRIED TO REFRESH, BUT NO CHATPARTNER')\n        }\n    }\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n          refresh()\n        }, 1000);\n        return () => clearInterval(interval);\n      }, [chatpartner]);\n\n    function closeForm() {\n        console.log('close clicked');\n        document.getElementById(\"myForm\").style.display = \"none\";\n    }\n\n    function sendMessage(event) {\n        event.preventDefault();\n        const message = document.getElementById(\"messageBox\").value;\n        CHATR.addMessage({\n            user: thisUser.username,\n            chatPartner: chatpartner,\n            thisChat: {\n                senderId: thisUser.username,\n                text: message\n            }\n        })\n\n        CHATR.addMessageInvert({\n            user: chatpartner,\n            chatPartner: thisUser.username,\n            thisChat: {\n                senderId: thisUser.username,\n                text: message\n            }\n        })\n\n        console.log('Message: ', message)\n        document.getElementById(\"messageBox\").value = '';\n        refresh();\n    }\n\n    return (\n        <div>\n          \n            <div className=\"form-popup chatbox\" id=\"myForm\">\n\n                <form className=\"form-container\">\n\n                    <button\n                    type=\"button\"\n                    className=\"close\"\n                    aria-label=\"Close\"\n                    onClick={closeForm}\n                    >\n                    <span aria-hidden=\"true\">&times;</span>\n                    </button>\n\n                    <h5 className=\"mb-2 mt-2 ml-1\">Chatting With: {chatpartner}</h5>\n                    \n                    <MessageList\n                    thisUser={thisUser}\n                    chatpartner={chatpartner}\n                    messageList={messageList}\n                    messageList2={messageList2}\n                    />\n                \n                    <input\n                    id=\"messageBox\"\n                    type=\"text\"\n                    placeholder=\"Type your message here\"\n                    name=\"msg\">\n                    </input>\n\n                    <button\n                    type=\"submit\"\n                    className=\"btn send\"\n                    onClick={sendMessage}\n                    >Send\n                    </button>\n\n                </form>\n            </div>\n        </div>\n    )\n}","import React, {useState, useEffect } from \"react\";\nimport AUTH from \"../utils/AUTH\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport FormControl from 'react-bootstrap/FormControl';\nimport CHATR from \"../utils/CHATR\";\nimport ChatBox from \"./ChatBox\"\n\nexport default function Navbar( { users, setUsers, thisUser }) {\n    // console.log('THISUSER: ', thisUser.username)\n\n    const thisUserName = thisUser.username\n\n    const [chatpartner, setChatpartner] = useState();\n    const [messageList, setMessageList] = useState();\n    \n\n    const getUsers = async e => {\n\n        const users = await AUTH.findAllUsers()\n        // console.log('users: ', users);\n        let allUsers = users.data\n        // console.log('allUsers before delete: ', allUsers)\n        \n        let i;\n        for (i = 0; i < allUsers.length; i++) {\n            if (allUsers[i]._id === localStorage.token.slice(10,34)) {\n                // console.log('We have a match! AllUsers[i]._id: ', allUsers[i].firstName + \" localStorage: \" + localStorage.token.slice(10,34))\n                allUsers.splice([i],1)\n            } else {\n                // console.log('NO MATCH WAS FOUND', allUsers[i].firstName + \" localStorage: \" + localStorage.token.slice(10,34))\n            }\n        }\n        setUsers(allUsers)\n    }\n\n    const getMessages = async e => {\n        const messages = await CHATR.getMessages(\n            {\n            user: thisUserName,\n        })\n\n        setMessageList(messages.data)\n    }\n\n    useEffect(() => {\n        getUsers()\n    }, [])\n\n    const openForm = async (result) => {\n        CHATR.newOrOpenChat({\n            user: thisUser.username,\n            chatPartner: result\n        })\n\n        CHATR.newOrOpenChatInvert({\n            user: thisUser.username,\n            chatPartner: result\n        })\n        setChatpartner(result);\n\n        document.getElementById(\"myForm\").style.display = \"block\";\n    }\n\n    const logout = () => {\n        console.log('logout clicked');\n        localStorage.clear();\n        window.location.reload();\n    }\n\n    const CustomMenu = React.forwardRef(\n        ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\n            const [value, setValue] = useState('');\n\n            return (\n                <div\n                ref={ref}\n                style={style}\n                className={className}\n                aria-labelledby={labeledBy}\n                >\n                <FormControl\n                    autoFocus\n                    className=\"mx-3 my-2 w-auto\"\n                    placeholder=\"Type to find users\"\n                    onChange={(e) => setValue(e.target.value)}\n                    value={value}\n                />\n                <ul className=\"list-unstyled\">\n                    {React.Children.toArray(children).filter(\n                    (child) =>\n                        // console.log(value),\n                        // console.log('CHILD.props.children: ', child.props.children),\n                        !value || child.props.children.includes(value)\n                    )}\n                </ul>\n                </div>\n            );\n        },\n    );\n    \n    \n    return(\n        <nav className=\"navbar navbar-light bg-light\">\n        <span className=\"navbar-brand mb-0 h1\">Navbar gonna be so lit</span>\n\n        \n        <div className=\"nav navbar-right\">\n            \n           <Dropdown className=\"mr-3\" onClick={getMessages}>\n                <Dropdown.Toggle\n                    // onClick={getMessages}\n                    className=\"open-button\"\n                    variant=\"success\"\n                    id=\"dropdown-custom-components\"\n                    >\n                    Chat\n                </Dropdown.Toggle>\n                <Dropdown.Menu as={CustomMenu}>\n                    {users.map(result => (\n                        <Dropdown.Item key={result._id}\n                        onClick={() => openForm(result.username)}\n                        >{result.username}\n                        </Dropdown.Item>\n                        ))}\n                </Dropdown.Menu>\n            </Dropdown>\n\n            <button\n            className=\"open-button success mr-3\"\n            onClick={logout}\n            >Log Out\n            </button>\n        <ChatBox\n        thisUser={thisUser}\n        chatpartner={chatpartner}\n        messageList={messageList}\n        />\n        </div>\n    </nav>\n    )\n\n}\n","import React, { useState, useEffect } from \"react\";\nimport UserNavbar from \"../components/Navbar\"\nimport AUTH from \"../utils/AUTH\"\n// import Chatbox from \"../components/ChatBox\";\n\nexport default function Dashboard () {\n\n    const [thisUser, setThisUser] = useState([])\n\n    const getUser = async e => {\n        const thisUserID = localStorage.token.slice(10,34)\n        // console.log('ThisUserID: ', thisUserID)\n\n        // e.preventDefault()\n        const user = await AUTH.getOneUser(thisUserID)\n        // console.log('USER.data:', user.data);\n        setThisUser(user.data)\n    }\n    \n\n    useEffect(() => {\n        getUser()\n    }, [])\n\n\n    const [users, setUsers] = useState([])\n    \n    return(\n        \n        <div>\n            <UserNavbar\n            users={users}\n            setUsers={setUsers}\n            thisUser ={thisUser}\n            />\n            <div className=\"m-4\">\n            Welcome user: <strong>\n                {thisUser.firstName} {thisUser.lastName}\n                </strong>\n            {/* <Chatbox\n            thisUser={thisUser}\n            /> */}\n     \n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Wrapper from \"./components/Wrapper\";\nimport Login from \"./pages/Login\";\nimport Dashboard from \"./pages/Dashboard\"\nimport './App.css';\nimport useToken from './hooks/useToken';\n\nfunction App() {\n\n  const { token, setToken } = useToken();\n \n\n  if (!token) {\n    return <Login setToken={setToken} />\n  }\n\n  return (\n    \n    <Router>\n      <div>\n        <Wrapper>\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path =\"/\" component={Dashboard} />\n        </Wrapper>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { useState } from 'react';\n\nexport default function useToken() {\n    \n    const getToken = () => {\n        // console.log('sessionStorage.length: ', sessionStorage.length);\n        // Behold the code I'm most proud of ever. I wasn't able to use an optional chaining operator, so this resolved the issue:\n        const  userToken2 = localStorage.length > 0 && JSON.parse(localStorage.getItem('token'))\n      //  if (localStorage.length === 0) {\n        //    return null\n        //} else {\n        //const tokenString = localStorage.getItem('token');\n        // console.log('tokenString: ', tokenString)\n        //const userToken = JSON.parse(tokenString);\n        // console.log('userToken ', userToken);\n        return userToken2 ? userToken2.token : null\n        //}\n    };\n\n    const [token, setToken] = useState(getToken());\n\n    const saveToken = (userToken) => {\n        console.log('USERTOKEN: ', userToken)\n        const userTokenID = userToken.data.user._id\n        // console.log('usertokenID: ', userTokenID)\n        const objectToken = `{\"token\":\"${userTokenID}\"}`\n        // console.log('objectToken: ', objectToken);\n        const parsedToken = JSON.parse(objectToken)\n        // console.log('parsedToken: ', parsedToken)\n        localStorage.setItem('token', JSON.stringify(parsedToken));\n        setToken(parsedToken.token);\n    };\n   \n    return {\n        setToken: saveToken,\n        token\n    }\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport App from './App';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}